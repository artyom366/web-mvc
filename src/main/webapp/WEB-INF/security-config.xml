<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

        <security:authentication-manager>
            <!--hard coded users-->
            <security:authentication-provider>
                <security:user-service>
                    <security:user name="art" authorities="admin" password="letmein"></security:user>
                    <security:user name="art1" authorities="admin" password="letmein1"></security:user>
                </security:user-service>

                <!--Inject password encoder into auth provider-->
                <!--<security:password-encoder hash="bcrypt" ref="passwordEncoder"></security:password-encoder>-->
            </security:authentication-provider>

            <!--data base user auth-->
            <security:authentication-provider>
                <!--custom queries user BINARY keyword to enforce case sensitivity in db queries-->
                <security:jdbc-user-service id="jdbcUserService" data-source-ref="dataSource"
                                            authorities-by-username-query="SELECT * FROM authorities WHERE BINARY username = ?"
                                            users-by-username-query="SELECT * FROM users WHERE BINARY username = ?"></security:jdbc-user-service><!--JNDI data source-->
            </security:authentication-provider>
        </security:authentication-manager>

        <security:http use-expressions="true">
            <security:intercept-url pattern="/api/**" access="permitAll"></security:intercept-url>
            <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"></security:intercept-url> <!--roles should be using the pattern "ROLE_prefix"-->
            <security:intercept-url pattern="/createoffer" access="isAuthenticated()"></security:intercept-url>
            <security:intercept-url pattern="/docreate" access="isAuthenticated()"></security:intercept-url>
            <security:intercept-url pattern="/offercreated" access="isAuthenticated()"></security:intercept-url>
            <security:intercept-url pattern="/login" access="permitAll"></security:intercept-url>
            <security:intercept-url pattern="/loggedout" access="permitAll"></security:intercept-url>
            <security:intercept-url pattern="/" access="permitAll"></security:intercept-url>
            <security:intercept-url pattern="/offers" access="permitAll"></security:intercept-url>
            <security:intercept-url pattern="/newacc" access="permitAll"></security:intercept-url>
            <security:intercept-url pattern="/createaccount" access="permitAll"></security:intercept-url>
            <security:intercept-url pattern="/accountcreated" access="permitAll"></security:intercept-url>
            <security:intercept-url pattern="/denied" access="permitAll"></security:intercept-url>

            <security:intercept-url pattern="/stat/**" access="permitAll"></security:intercept-url> <!--permit static resources-->

            <security:intercept-url pattern="/**" access="denyAll"></security:intercept-url><!--block all url addresses-->

            <security:form-login login-page="/login" authentication-failure-url="/login?error=true"></security:form-login><!--new login page-->

            <security:logout logout-success-url="/loggedout"

                             logout-url="/logout"
                             delete-cookies="JSESSIONID"></security:logout>
            <!--logout-url="/logout" is the default spring security logout mechanism-->
            <!--logout-success-url="/loggedout" redirect to /loggegout after successful logout-->

            <security:access-denied-handler error-page="/denied"></security:access-denied-handler>

            <!--user-service-ref is required when there are multiple auth providers i.e. harcoded in spring configuration file and jdbc provider-->
            <security:remember-me user-service-ref="jdbcUserService" key="AppKey"></security:remember-me>

        </security:http>

    <security:global-method-security secured-annotations="enabled" /><!--security annotation on methods, restricting access-->

    <!--Password ebcoder-->
    <!--<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>-->


</beans>